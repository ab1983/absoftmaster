<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html  xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
       xmlns:h="http://java.sun.com/jsf/html"
       xmlns:f="http://java.sun.com/jsf/core"
       xmlns:p="http://primefaces.org/ui"
       xmlns:c="http://java.sun.com/jsp/jstl/core">
    <script>var loaded = false;
        var page = null</script>     
    <h:form binding="#{admAlgoappBeanForm}" prependId="false">    
        <p:remoteCommand name="updateCurrentForm" immediate="true" update="@form"/>
        <p:remoteCommand name="updateBasePanel" update=":basePanel"/>  
        <p:remoteCommand name="updateStartPage" actionListener="#{app.updateContainerPage()}" update="@form"/>  
        <script type="text/javascript">
            /* <![CDATA[ */
            function init1() {

                //alert($('.ui-growl').html());
                if (page !== '#{app.containerPage}') {
                    page = '#{app.containerPage}';
                    window.setTimeout(function() {
                        if ($('.ui-growl').html() !== '') {
                            //alert($('.ui-growl').html() + '1');
                            window.setTimeout(function() {
                                //updateCurrentPage();
                            }, 1000);
                        } else {
                            //updateCurrentPage();
                        }
                    }, 100);
                }
            }
            //init1();
            /* ]]> */
        </script>     
        <h:panelGroup  layout="block">
            <p:panel binding="#{algoappContainerBind1}" style="width: 960px;height: 450px;" styleClass="ui-algo-container" >

            </p:panel>                   
        </h:panelGroup>   
        <p:dialog widgetVar="exportTableDlg" header="Selecione o Formato para Exportação" modal="false" dynamic="true" resizable="false">
            <h:commandLink rendered="false">  
                <p:graphicImage value="resources/images/excel.png" />  
                <p:dataExporter type="xls" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>  
            
            <h:commandLink onclick="exportHtmlToPdf([{name:'html',value:$('.ui-algo-container').html()}]);" target="_blank">   
                <p:graphicImage value="resources/images/pdf.png" />  
            </h:commandLink>  
            
            <h:commandLink actionListener="#{app.exportPdf()}" target="_blank">   
                <p:graphicImage value="resources/images/pdf.png" />  
            </h:commandLink>  

            <h:commandLink>  
                <p:graphicImage value="resources/images/csv.png" />  
                <p:dataExporter type="csv" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>  

            <h:commandLink>  
                <p:graphicImage value="resources/images/xml.png" />  
                <p:dataExporter type="xml" target="#{app.dataTableSelected.id}" fileName="#{app.requirement.requirementName}" />  
            </h:commandLink>        
        </p:dialog>               
        <p:remoteCommand name="exportHtmlToPdf" action="#{app.exportHtmlToPdf}"/>
        <p:commandButton value="Atualizar" immediate="true" oncomplete="updateStartPage();"/>
        <f:event type="preRenderComponent" listener="#{app.setAlgoContainerEvt(baseBean.getComponentEvent(algoappContainerBind1))}"/>
        <p:dialog widgetVar="pdfViewer" dynamic="true" rendered="false">
            <p:media value="#{app.pdfFileStr}" player="pdf" width="100%" height="300px">  
                Your browser can't display pdf, <h:outputLink value="#{app.pdfFileStr}">click</h:outputLink> to download pdf instead.  
            </p:media>            
        </p:dialog>
        <script type="text/javascript">
            /* <![CDATA[ */
            var tabindex = null;
            var firstindex = null;
            function findIndex(elements) {
                elements.each(function() {
                    if ($(this).children().length > 0) {
                        findIndex($(this).children());
                    }
                    if (this.type !== "hidden") {
                        if (firstindex === null) {
                            firstindex = this;
                        }
                        if ((tabindex === null && $(this).attr("tabindex") !== undefined) || parseFloat($(this).attr("tabindex")) < parseFloat($(tabindex).attr("tabindex"))) {
                            tabindex = this;
                            $(tabindex).focus();
                        }
                    }
                    //alert($(tabindex).attr("tabindex"));
                });
            }
            function init2() {
                var elements = $(esc('#{admAlgoappBeanForm.clientId}')).find('.ui-algo-element')
                findIndex(elements);
                if (tabindex === null && firstindex !== null) {
                    //$(firstindex).focus();
                }
                //alert($(tabindex).attr("tabindex"));
                if (!loaded) {
                    //updateCurrentForm();
                    //updateCurrentConteiner();
                    //updateBasePanel();
                    loaded = true;
                }
            }
            init2();
            /* ]]> */
        </script>     
        <script>
            // Add the $() function
            $ = jQuery;
            // Now you can use it
            $(document).ready(function() {
                $('.hasDatepicker').mask('#{msg['dateMask']}');
                $(".decimalFormat1").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 1
                });
                $(".decimalFormat2").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 2
                });
                $(".decimalFormat3").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 3
                });
                $(".decimalFormat4").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 4
                });
                $(".decimalFormat5").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 5
                });
                $(".decimalFormat6").maskMoney({
                    thousands: '#{msg.thousandsSeparator}',
                    decimal: '#{msg.decimalSeparator}',
                    precision: 6
                });
            });
        </script>        
    </h:form>
</html>
